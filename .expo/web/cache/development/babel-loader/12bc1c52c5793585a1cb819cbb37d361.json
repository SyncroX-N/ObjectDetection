{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\hkdj\\\\Desktop\\\\Done\\\\screens\\\\SmartLocation\\\\SearchableContacts.js\";\nimport React, { useEffect, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport \"react-native\";\nimport GlobalStyles from \"../../GlobalStyles\";\nimport * as Contacts from \"expo-contacts\";\nexport default function SearchableContacts(props) {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      contacts = _useState2[0],\n      setContacts = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      inMemoryContacts = _useState4[0],\n      setInMemoryContacts = _useState4[1];\n\n  useEffect(function () {\n    (function _callee() {\n      var _await$Contacts$reque, status, _await$Contacts$getCo, data;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Contacts.requestPermissionsAsync());\n\n            case 2:\n              _await$Contacts$reque = _context.sent;\n              status = _await$Contacts$reque.status;\n\n              if (!(status === \"granted\")) {\n                _context.next = 11;\n                break;\n              }\n\n              _context.next = 7;\n              return _regeneratorRuntime.awrap(Contacts.getContactsAsync({\n                fields: [Contacts.Fields.PhoneNumbers, Contacts.Fields.Emails]\n              }));\n\n            case 7:\n              _await$Contacts$getCo = _context.sent;\n              data = _await$Contacts$getCo.data;\n              setContacts(data);\n              setInMemoryContacts(data);\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  }, []);\n\n  renderItem = function renderItem(_ref) {\n    var item = _ref.item;\n    return React.createElement(View, {\n      style: {\n        minHeight: 70,\n        padding: 5\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 5\n      }\n    }, React.createElement(Text, {\n      style: {\n        color: \"#009999\",\n        fontWeight: \"bold\",\n        fontSize: 26\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }\n    }, item.firstName + \" \", item.lastName), React.createElement(Text, {\n      style: {\n        color: \"black\",\n        fontWeight: \"bold\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 7\n      }\n    }, item.phoneNumbers && item.phoneNumbers[0].digits, item.phoneNumbers && item.phoneNumbers[0].number));\n  };\n\n  searchContacts = function searchContacts(value) {\n    var filteredContacts = inMemoryContacts.filter(function (contact) {\n      var _contact$firstName, _contact$firstName2;\n\n      return ((_contact$firstName = contact.firstName) == null ? void 0 : _contact$firstName.toLowerCase().indexOf(value)) > -1 || ((_contact$firstName2 = contact.firstName) == null ? void 0 : _contact$firstName2.indexOf(value)) > -1;\n    });\n    setContacts(filteredContacts);\n  };\n\n  return React.createElement(SafeAreaView, {\n    style: GlobalStyles.adroidSafeArea,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, React.createElement(TextInput, {\n    placeholder: \"Search\",\n    placeholderTextColor: \"#00000\",\n    style: styles.searchBar,\n    onChangeText: function onChangeText(value) {\n      return searchContacts(value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, React.createElement(FlatList, {\n    data: contacts,\n    renderItem: renderItem,\n    keyExtractor: function keyExtractor(item, index) {\n      return index.toString();\n    },\n    ListEmptyComponent: function ListEmptyComponent() {\n      return React.createElement(View, {\n        style: {\n          flex: 1,\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          marginTop: 50\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: {\n          color: \"#0000\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 15\n        }\n      }, \"No Contacts Found\"));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  })));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  searchBar: {\n    height: 40,\n    width: \"90%\",\n    fontSize: 20,\n    padding: 10,\n    color: \"white\",\n    borderBottomWidth: 1,\n    borderBottomColor: \"#7d90a0\"\n  }\n});","map":{"version":3,"sources":["C:/Users/hkdj/Desktop/Done/screens/SmartLocation/SearchableContacts.js"],"names":["React","useEffect","useState","GlobalStyles","Contacts","SearchableContacts","props","contacts","setContacts","inMemoryContacts","setInMemoryContacts","requestPermissionsAsync","status","getContactsAsync","fields","Fields","PhoneNumbers","Emails","data","renderItem","item","minHeight","padding","color","fontWeight","fontSize","firstName","lastName","phoneNumbers","digits","number","searchContacts","value","filteredContacts","filter","contact","toLowerCase","indexOf","adroidSafeArea","styles","searchBar","index","toString","flex","alignItems","justifyContent","marginTop","StyleSheet","create","container","backgroundColor","height","width","borderBottomWidth","borderBottomColor"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  StyleSheet,\r\n  SafeAreaView,\r\n  TextInput,\r\n  FlatList,\r\n} from \"react-native\";\r\nimport {} from \"react-native\";\r\nimport GlobalStyles from \"../../GlobalStyles\";\r\n\r\nimport * as Contacts from \"expo-contacts\";\r\n\r\nexport default function SearchableContacts(props) {\r\n  const [contacts, setContacts] = useState([]);\r\n  const [inMemoryContacts, setInMemoryContacts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      const { status } = await Contacts.requestPermissionsAsync();\r\n      if (status === \"granted\") {\r\n        const { data } = await Contacts.getContactsAsync({\r\n          fields: [Contacts.Fields.PhoneNumbers, Contacts.Fields.Emails],\r\n        });\r\n        setContacts(data);\r\n        setInMemoryContacts(data);\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n  renderItem = ({ item }) => (\r\n    <View style={{ minHeight: 70, padding: 5 }}>\r\n      <Text style={{ color: \"#009999\", fontWeight: \"bold\", fontSize: 26 }}>\r\n        {item.firstName + \" \"}\r\n        {item.lastName}\r\n      </Text>\r\n      <Text style={{ color: \"black\", fontWeight: \"bold\" }}>\r\n        {item.phoneNumbers && item.phoneNumbers[0].digits}\r\n        {item.phoneNumbers && item.phoneNumbers[0].number}\r\n      </Text>\r\n    </View>\r\n  );\r\n\r\n  searchContacts = (value) => {\r\n    const filteredContacts = inMemoryContacts.filter(\r\n      (contact) =>\r\n        contact.firstName?.toLowerCase().indexOf(value) > -1 ||\r\n        contact.firstName?.indexOf(value) > -1\r\n    );\r\n    setContacts(filteredContacts);\r\n  };\r\n\r\n  return (\r\n    <SafeAreaView style={GlobalStyles.adroidSafeArea}>\r\n      <TextInput\r\n        placeholder=\"Search\"\r\n        placeholderTextColor=\"#00000\"\r\n        style={styles.searchBar}\r\n        onChangeText={(value) => searchContacts(value)}\r\n      />\r\n\r\n      <View>\r\n        <FlatList\r\n          data={contacts}\r\n          renderItem={renderItem}\r\n          keyExtractor={(item, index) => index.toString()}\r\n          ListEmptyComponent={() => (\r\n            <View\r\n              style={{\r\n                flex: 1,\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n                marginTop: 50,\r\n              }}\r\n            >\r\n              <Text style={{ color: \"#0000\" }}>No Contacts Found</Text>\r\n            </View>\r\n          )}\r\n        />\r\n      </View>\r\n    </SafeAreaView>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: \"#fff\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  searchBar: {\r\n    height: 40,\r\n    width: \"90%\",\r\n    fontSize: 20,\r\n    padding: 10,\r\n    color: \"white\",\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: \"#7d90a0\",\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}