{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\hkdj\\\\Desktop\\\\Done\\\\screens\\\\SmartLocation\\\\SearchableContacts.js\";\nimport React, { useEffect, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport \"react-native\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport * as Contacts from \"expo-contacts\";\nexport default function SearchableContacts(_ref) {\n  var route = _ref.route;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      contacts = _useState2[0],\n      setContacts = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      contact = _useState4[0],\n      setContact = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      inMemoryContacts = _useState6[0],\n      setInMemoryContacts = _useState6[1];\n\n  var navigation = useNavigation();\n  useEffect(function () {\n    (function _callee() {\n      var _await$Contacts$reque, status, _await$Contacts$getCo, data;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Contacts.requestPermissionsAsync());\n\n            case 2:\n              _await$Contacts$reque = _context.sent;\n              status = _await$Contacts$reque.status;\n\n              if (!(status === \"granted\")) {\n                _context.next = 11;\n                break;\n              }\n\n              _context.next = 7;\n              return _regeneratorRuntime.awrap(Contacts.getContactsAsync({\n                fields: [Contacts.Fields.PhoneNumbers, Contacts.Fields.Emails]\n              }));\n\n            case 7:\n              _await$Contacts$getCo = _context.sent;\n              data = _await$Contacts$getCo.data;\n              setContacts(data);\n              setInMemoryContacts(data);\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  }, []);\n\n  renderItem = function renderItem(_ref2) {\n    var item = _ref2.item;\n    return React.createElement(View, {\n      style: styles.row,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 5\n      }\n    }, React.createElement(View, {\n      style: styles.topRow,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }\n    }, React.createElement(View, {\n      style: styles.textContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }\n    }, React.createElement(Text, {\n      style: {\n        color: \"#009999\",\n        fontWeight: \"bold\",\n        fontSize: 26\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }\n    }, item.firstName + \" \", item.lastName)), React.createElement(View, {\n      style: styles.buttonContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }\n    }, React.createElement(TouchableOpacity, {\n      style: styles.selectButton,\n      title: \"Send Location\",\n      onPress: function onPress() {\n        console.log(\"cccc\", item.phoneNumbers[0].number);\n\n        if (item.phoneNumbers) {\n          if (item.phoneNumbers[0].digits) {\n            var updateContact = JSON.stringify(item.phoneNumbers[0].digits);\n          }\n\n          if (item.phoneNumbers[0].number) {\n            var _updateContact = JSON.stringify(item.phoneNumbers[0].number);\n\n            setContact(_updateContact);\n          }\n        }\n\n        console.log(contact);\n        navigation.navigate(\"SmartLocationPage\", {\n          post: JSON.stringify(contact)\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }\n    }, React.createElement(Text, {\n      style: styles.buttonText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }\n    }, \"Select\")))), React.createElement(View, {\n      style: styles.bottomRow,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }\n    }, React.createElement(Text, {\n      style: {\n        color: \"black\",\n        fontWeight: \"bold\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }\n    }, item.phoneNumbers && item.phoneNumbers[0].digits, item.phoneNumbers && item.phoneNumbers[0].number)));\n  };\n\n  searchContacts = function searchContacts(value) {\n    var filteredContacts = inMemoryContacts.filter(function (contact) {\n      var _contact$firstName, _contact$firstName2;\n\n      return ((_contact$firstName = contact.firstName) == null ? void 0 : _contact$firstName.toLowerCase().indexOf(value)) > -1 || ((_contact$firstName2 = contact.firstName) == null ? void 0 : _contact$firstName2.indexOf(value)) > -1;\n    });\n    setContacts(filteredContacts);\n  };\n\n  return React.createElement(SafeAreaView, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 5\n    }\n  }, React.createElement(TextInput, {\n    placeholder: \"Search\",\n    placeholderTextColor: \"black\",\n    style: styles.searchBar,\n    onChangeText: function onChangeText(value) {\n      return searchContacts(value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }\n  }, React.createElement(FlatList, {\n    data: contacts,\n    renderItem: renderItem,\n    keyExtractor: function keyExtractor(item, index) {\n      return index.toString();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  })));\n}\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: \"#fff\"\n  },\n  topRow: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    alignContent: \"center\",\n    width: \"100%\"\n  },\n  row: {\n    minHeight: 70,\n    padding: 5,\n    width: \"100%\"\n  },\n  textContainer: {\n    width: \"80%\"\n  },\n  buttonContainer: {\n    display: \"flex\",\n    justifyContent: \"flex-end\"\n  },\n  selectButton: {\n    backgroundColor: \"#009999\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    paddingHorizontal: 15\n  },\n  buttonText: {\n    color: \"white\",\n    fontWeight: \"bold\"\n  },\n  searchBar: {\n    height: 50,\n    fontSize: 20,\n    paddingHorizontal: 8,\n    color: \"black\",\n    borderBottomWidth: 1,\n    borderBottomColor: \"#7d90a0\"\n  }\n});","map":{"version":3,"sources":["C:/Users/hkdj/Desktop/Done/screens/SmartLocation/SearchableContacts.js"],"names":["React","useEffect","useState","useNavigation","Contacts","SearchableContacts","route","contacts","setContacts","contact","setContact","inMemoryContacts","setInMemoryContacts","navigation","requestPermissionsAsync","status","getContactsAsync","fields","Fields","PhoneNumbers","Emails","data","renderItem","item","styles","row","topRow","textContainer","color","fontWeight","fontSize","firstName","lastName","buttonContainer","selectButton","console","log","phoneNumbers","number","digits","updateContact","JSON","stringify","navigate","post","buttonText","bottomRow","searchContacts","value","filteredContacts","filter","toLowerCase","indexOf","container","searchBar","index","toString","StyleSheet","create","backgroundColor","display","flexDirection","alignContent","width","minHeight","padding","justifyContent","alignItems","paddingHorizontal","height","borderBottomWidth","borderBottomColor"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  StyleSheet,\r\n  SafeAreaView,\r\n  TextInput,\r\n  FlatList,\r\n  TouchableOpacity,\r\n} from \"react-native\";\r\nimport {} from \"react-native\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport * as Contacts from \"expo-contacts\";\r\n\r\nexport default function SearchableContacts({ route }) {\r\n  const [contacts, setContacts] = useState([]);\r\n  const [contact, setContact] = useState();\r\n  const [inMemoryContacts, setInMemoryContacts] = useState([]);\r\n  const navigation = useNavigation();\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      const { status } = await Contacts.requestPermissionsAsync();\r\n      if (status === \"granted\") {\r\n        const { data } = await Contacts.getContactsAsync({\r\n          fields: [Contacts.Fields.PhoneNumbers, Contacts.Fields.Emails],\r\n        });\r\n        setContacts(data);\r\n        setInMemoryContacts(data);\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n  renderItem = ({ item }) => (\r\n    <View style={styles.row}>\r\n      <View style={styles.topRow}>\r\n        <View style={styles.textContainer}>\r\n          <Text style={{ color: \"#009999\", fontWeight: \"bold\", fontSize: 26 }}>\r\n            {item.firstName + \" \"}\r\n            {item.lastName}\r\n          </Text>\r\n        </View>\r\n        <View style={styles.buttonContainer}>\r\n          <TouchableOpacity\r\n            style={styles.selectButton}\r\n            title=\"Send Location\"\r\n            onPress={() => {\r\n              console.log(\"cccc\", item.phoneNumbers[0].number);\r\n              if (item.phoneNumbers) {\r\n                if (item.phoneNumbers[0].digits) {\r\n                  const updateContact = JSON.stringify(\r\n                    item.phoneNumbers[0].digits\r\n                  );\r\n                }\r\n                if (item.phoneNumbers[0].number) {\r\n                  const updateContact = JSON.stringify(\r\n                    item.phoneNumbers[0].number\r\n                  );\r\n                  setContact(updateContact);\r\n                }\r\n              }\r\n\r\n              console.log(contact);\r\n              navigation.navigate(\"SmartLocationPage\", {\r\n                post: JSON.stringify(contact),\r\n              });\r\n            }}\r\n          >\r\n            <Text style={styles.buttonText}>Select</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      </View>\r\n      <View style={styles.bottomRow}>\r\n        <Text style={{ color: \"black\", fontWeight: \"bold\" }}>\r\n          {item.phoneNumbers && item.phoneNumbers[0].digits}\r\n          {item.phoneNumbers && item.phoneNumbers[0].number}\r\n        </Text>\r\n      </View>\r\n    </View>\r\n  );\r\n\r\n  searchContacts = (value) => {\r\n    const filteredContacts = inMemoryContacts.filter(\r\n      (contact) =>\r\n        contact.firstName?.toLowerCase().indexOf(value) > -1 ||\r\n        contact.firstName?.indexOf(value) > -1\r\n    );\r\n    setContacts(filteredContacts);\r\n  };\r\n  return (\r\n    <SafeAreaView style={styles.container}>\r\n      <TextInput\r\n        placeholder=\"Search\"\r\n        placeholderTextColor=\"black\"\r\n        style={styles.searchBar}\r\n        onChangeText={(value) => searchContacts(value)}\r\n      />\r\n\r\n      <View>\r\n        <FlatList\r\n          data={contacts}\r\n          renderItem={renderItem}\r\n          keyExtractor={(item, index) => index.toString()}\r\n        />\r\n      </View>\r\n    </SafeAreaView>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    backgroundColor: \"#fff\",\r\n  },\r\n  topRow: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    alignContent: \"center\",\r\n    width: \"100%\",\r\n  },\r\n  row: {\r\n    minHeight: 70,\r\n    padding: 5,\r\n    width: \"100%\",\r\n  },\r\n  textContainer: {\r\n    width: \"80%\",\r\n  },\r\n  buttonContainer: {\r\n    display: \"flex\",\r\n    justifyContent: \"flex-end\",\r\n  },\r\n  selectButton: {\r\n    backgroundColor: \"#009999\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    paddingHorizontal: 15,\r\n  },\r\n  buttonText: {\r\n    color: \"white\",\r\n    fontWeight: \"bold\",\r\n  },\r\n  searchBar: {\r\n    height: 50,\r\n    fontSize: 20,\r\n    paddingHorizontal: 8,\r\n    color: \"black\",\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: \"#7d90a0\",\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}